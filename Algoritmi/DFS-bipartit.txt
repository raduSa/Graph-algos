#include <iostream>
#include <bits/stdc++.h>
 
using namespace std;
 
int n, m;
vector<int> team;
unordered_map<int, vector<int>> graph;
 
bool dfs(int curr, int currTeam) {
    if (team[curr]) {
        if (team[curr] != currTeam)
            return false;
        else return true;
    }
    team[curr] = currTeam;
    int nextTeam;
    if (currTeam == 1)
        nextTeam = 2;
    else nextTeam = 1;
    for (auto node : graph[curr])
        if (!dfs(node, nextTeam))
            return false;
    return true;
}
 
int main()
{
    cin>>n>>m;
    for (int i=0; i<n+1; i++)
        team.push_back(0);
    int l, r;
    for (int i=0; i<m; i++) {
        cin>>l>>r;
        graph[l].push_back(r);
        graph[r].push_back(l);
    }
    for (auto p : graph)
    if(!team[p.first] && !dfs(p.first, 1)) {
        cout<<"IMPOSSIBLE";
        return 0;
    }
    for (int i=1; i<n+1; i++)
        if (team[i])
            cout<<team[i]<<" ";
        else cout<<1<<" ";
    return 0;
}