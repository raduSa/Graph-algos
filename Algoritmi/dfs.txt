#include <bits/stdc++.h>

using namespace std;

int n, m;
vector<vector<int>> graph;
vector<int> visited;

void dfs(int curr) {
    if (visited[curr])
        return;

    visited[curr] = 1;
    for (int node : graph[curr])
        dfs(node);
}

int main()
{
    int n, m, l ,r;
    cin >> n >> m;
    graph.resize(n + 1);
    visited.assign(n + 1, 0);
    
    for (int i = 0; i < m; i++) {
        cin >> l >> r;
        graph[l].push_back(r);
        graph[r].push_back(l);
    }
    
    int cnt = 0;
    for (int i = 1; i <= n; i++) {
        if (!visited[i])
            dfs(i), cnt++;
        
    }
    cout << cnt;
    return 0;
}